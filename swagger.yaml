openapi: 3.0.0
info:
  title: API Documentation
  description: API for managing routes, amenities, stations, vehicles, rentals, and more.
  version: 1.0.0
servers:
  - url: https://witsgobackend.azurewebsites.net/

paths:
  /v1/accessibility/getWheelchairs:
    get:
      tags: 
        - "Accessibility"
      summary: Get available wheelchairs
      description: Fetch a list of available wheelchairs with optional filters.
      parameters:
        - name: campus
          in: query
          description: Filter by campus
          required: false
          schema:
            type: string
        - name: latitude
          in: query
          description: Filter by latitude
          required: false
          schema:
            type: number
        - name: longitude
          in: query
          description: Filter by longitude
          required: false
          schema:
            type: number
        - name: type
          in: query
          description: Filter by type of wheelchair
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
        '500':
          description: Server error

  /v1/admin/get_data:
    post:
      summary: Get data from dynamic collection
      tags: 
        - "Admin"
      description: Retrieve data based on the database and collection provided.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                database:
                  type: string
                  description: Database name
                  enum: [Accessibility, Map, UserRoutes, RentalService, Transportation]
                collection:
                  type: string
                  description: Collection name
                  enum: [Users, Routes, Preferences, NavigationHistory, Route, Schedule, Stop, Tracking, Vehicle, Rental, Station, Student, Amenity, Building, PointOfInterest, Room, AccessibleRoute, Location]
                data:
                  type: object
                  description: Data object for query
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
        '400':
          description: Invalid request
        '500':
          description: Server error

  /v1/admin/insert_data:
    post:
      summary: Insert or edit data in a dynamic collection
      tags: 
        - "Admin"
      description: Insert or edit records in the specified database and collection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                database:
                  type: string
                  description: Database name
                collection:
                  type: string
                  description: Collection name
                data:
                  type: object
                  description: Data object to insert or edit
      responses:
        '200':
          description: Success
        '400':
          description: Invalid request
        '500':
          description: Server error

  /v1/admin/update_data:
    put:
      summary: Update data in a dynamic collection
      tags: 
        - "Admin"
      description: Update records in the specified database and collection based on the provided data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                database:
                  type: string
                  description: Database name
                collection:
                  type: string
                  description: Collection name
                data:
                  type: object
                  description: Data object to update
      responses:
        '200':
          description: Success
        '400':
          description: Invalid request
        '500':
          description: Server error

  /v1/map/getBuildings:
    get:
      summary: Get buildings
      tags: 
        - "Maps"
      description: Fetch buildings with optional filters.
      parameters:
        - name: building_name
          in: query
          description: Filter by building name
          required: false
          schema:
            type: string
        - name: campus
          in: query
          description: Filter by campus
          required: false
          schema:
            type: string
        - name: latitude
          in: query
          description: Filter by latitude
          required: false
          schema:
            type: number
        - name: longitude
          in: query
          description: Filter by longitude
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
        '500':
          description: Server error

  /v1/map/getAmenities:
    get:
      summary: Get amenities
      tags: 
        - "Maps"
      description: Fetch amenities based on building and type.
      parameters:
        - name: amenity_type
          in: query
          description: Filter by amenity type
          required: false
          schema:
            type: string
        - name: building_id
          in: query
          description: Filter by building ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
        '500':
          description: Server error

  /v1/rental/stations:
    get:
      summary: Get all stations
      tags: 
        - "Rentals"
      description: Retrieve a list of all stations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '500':
          description: Server error

  /v1/rental/stations/{stationId}/vehicles:
    get:
      summary: Get vehicles at a station
      tags: 
        - "Rentals"
      description: Fetch vehicles available at a given station.
      parameters:
        - name: stationId
          in: path
          description: The station ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '404':
          description: Vehicles not found
        '500':
          description: Server error

  /v1/rental/rent:
    post:
      summary: Rent a vehicle
      tags: 
        - "Rentals"
      description: Rent a vehicle by providing student and station details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                studentId:
                  type: string
                vehicleId:
                  type: string
                fromStationId:
                  type: string
                toStationId:
                  type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Server error

  /v1/route_optimize/route_optimize:
    post:
      summary: Optimize a route
      tags: 
        - "Route Optimize"
      description: Use Google Maps API to optimize a route between an origin and destination.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                destination:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                travelMode:
                  type: string
                  enum: [DRIVING, WALKING, BICYCLING, TRANSIT]
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Server error

  /v1/schedule/pdf-text:
    get:
      summary: Fetch and extract text from the Wits bus schedule PDF.
      tags: 
        - "Schedule"
      description: Downloads the bus schedule PDF from the Wits website, parses it, and returns the extracted text.
      responses:
        '200':
          description: Extracted text from the PDF.
          content:
            text/html:
              schema:
                type: string
        '500':
          description: Error downloading or parsing the PDF.
  
  /v1/schedule/new-schedule:
    get:
      summary: Fetch and extract text from the New Schedule PDF.
      tags: 
        - "Schedule"
      description: Downloads the New Schedule PDF from the backend server, parses it, and returns the extracted text.
      responses:
        '200':
          description: Extracted text from the New Schedule PDF.
          content:
            text/html:
              schema:
                type: string
        '500':
          description: Error downloading or parsing the New Schedule PDF.
  
  /v1/userRoutes/insertRoute:
    post:
      summary: Insert a new route.
      tags: 
        - "User Routes"
      description: Adds a new route record to the database with start and end locations, duration, and route data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_location:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                  required:
                    - latitude
                    - longitude
                end_location:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                  required:
                    - latitude
                    - longitude
                duration:
                  type: string
                route_data:
                  type: string
              required:
                - start_location
                - end_location
                - duration
                - route_data
      responses:
        '200':
          description: Successfully inserted the route.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
        '400':
          description: Missing required parameters or error during insertion.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string